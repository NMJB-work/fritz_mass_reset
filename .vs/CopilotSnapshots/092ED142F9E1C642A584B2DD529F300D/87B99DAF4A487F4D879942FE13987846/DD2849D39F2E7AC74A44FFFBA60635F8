import React, { useState, useEffect } from 'react';
import axios from 'axios';
const API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';
const TOKEN = process.env.REACT_APP_API_TOKEN || 'change_me_to_a_strong_token';
axios.defaults.baseURL = API_BASE;
axios.defaults.headers.common['Authorization'] = `Bearer ${TOKEN}`;

export default function App() {
  const [cidrs, setCidrs] = useState('192.168.1.0/28');
  const [discoverResult, setDiscoverResult] = useState(null);
  const [targets, setTargets] = useState([]);
  const [password, setPassword] = useState('');
  const [profiles, setProfiles] = useState({});
  useEffect(() => { fetchProfiles(); }, []);
  async function fetchProfiles() { try { const r = await axios.get('/api/profiles'); setProfiles(r.data); } catch (e) { } }
  async function scan() { setDiscoverResult(null); const cidrList = cidrs.split(/\n|,|;/).map(s => s.trim()).filter(Boolean); try { const r = await axios.post('/api/discover', { cidrs: cidrList, timeout: 0.6 }); setDiscoverResult(r.data); } catch (e) { setDiscoverResult({ error: String(e) }) } }
  function addAllAlive() { if (!discoverResult) return; const alive = Object.keys(discoverResult.alive || {}); setTargets(prev => Array.from(new Set(prev.concat(alive))) ) }
  async function startReset() { try { const r = await axios.post('/api/reset', { targets, method: 'auto', password, model: '' }); alert(JSON.stringify(r.data)); } catch (e) { alert(String(e)) } }

  return (
    <div style={{ fontFamily: 'Roboto, Arial, sans-serif', background: 'linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%)', minHeight: '100vh', padding: 0, margin: 0 }}>
      <div style={{ maxWidth: 900, margin: '40px auto', background: '#fff', boxShadow: '0 4px 24px rgba(0,0,0,0.10)', borderRadius: 24, padding: '40px 32px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>
        <img src="/jb-computer-logo.png" alt="JB-Computer Logo" style={{ maxWidth: 340, marginBottom: 24, borderRadius: 12, boxShadow: '0 2px 12px rgba(79,140,255,0.10)' }} />
        <h1 style={{ fontSize: '2.4rem', fontWeight: 700, color: '#2563eb', marginBottom: 8, letterSpacing: 2 }}>Fritz Mass Reset</h1>
        <div style={{ color: '#4a5a6a', fontSize: '1.15rem', marginBottom: 32, textAlign: 'center', maxWidth: 600 }}>
          Welcome! Use this tool to discover and reset your Fritz devices quickly and easily.<br />
          <span style={{ color: '#2563eb', fontWeight: 500 }}>Elektronik & Mehr by JB-Computer</span>
        </div>
        <div style={{ display: 'flex', gap: 32, width: '100%', justifyContent: 'center', flexWrap: 'wrap' }}>
          <div style={{ flex: 1, minWidth: 320, maxWidth: 420 }}>
            <h3 style={{ color: '#2563eb', fontWeight: 700, fontSize: '1.2rem', marginBottom: 12 }}>Discover Devices</h3>
            <textarea rows={3} style={{ width: '100%', borderRadius: 8, border: '1px solid #e0eafc', padding: 10, fontSize: '1rem', marginBottom: 8, boxSizing: 'border-box', background: '#f5f8fa' }} value={cidrs} onChange={e => setCidrs(e.target.value)} />
            <div style={{ marginTop: 8, display: 'flex', gap: 12 }}>
              <button onClick={scan} style={{ background: '#4f8cff', color: '#fff', border: 'none', borderRadius: 8, padding: '10px 24px', fontSize: '1rem', fontWeight: 700, cursor: 'pointer', boxShadow: '0 2px 8px rgba(79,140,255,0.08)', transition: 'background 0.2s, transform 0.1s' }}>Scan</button>
              <button onClick={addAllAlive} style={{ background: '#e0eafc', color: '#2563eb', border: 'none', borderRadius: 8, padding: '10px 24px', fontSize: '1rem', fontWeight: 700, cursor: 'pointer', boxShadow: '0 2px 8px rgba(79,140,255,0.08)', transition: 'background 0.2s, transform 0.1s' }}>Add Alive</button>
            </div>
            <pre style={{ background: '#222', color: '#fff', padding: 12, marginTop: 12, borderRadius: 8, fontSize: '0.95rem', minHeight: 80, maxHeight: 220, overflow: 'auto' }}>{discoverResult ? JSON.stringify(discoverResult, null, 2) : 'Scan results here'}</pre>
          </div>
          <div style={{ flex: 1, minWidth: 320, maxWidth: 420 }}>
            <h3 style={{ color: '#2563eb', fontWeight: 700, fontSize: '1.2rem', marginBottom: 12 }}>Reset Devices</h3>
            <textarea rows={6} style={{ width: '100%', borderRadius: 8, border: '1px solid #e0eafc', padding: 10, fontSize: '1rem', marginBottom: 8, boxSizing: 'border-box', background: '#f5f8fa' }} value={targets.join('\n')} onChange={e => setTargets(e.target.value.split(/\n/).map(s => s.trim()).filter(Boolean))} />
            <div style={{ marginTop: 8, display: 'flex', gap: 12 }}>
              <input placeholder="Admin password" type="password" value={password} onChange={e => setPassword(e.target.value)} style={{ borderRadius: 8, border: '1px solid #e0eafc', padding: '10px 16px', fontSize: '1rem', background: '#f5f8fa', flex: 1 }} />
              <button onClick={startReset} style={{ background: '#4f8cff', color: '#fff', border: 'none', borderRadius: 8, padding: '10px 24px', fontSize: '1rem', fontWeight: 700, cursor: 'pointer', boxShadow: '0 2px 8px rgba(79,140,255,0.08)', transition: 'background 0.2s, transform 0.1s' }}>Start Reset</button>
            </div>
          </div>
        </div>
        <div style={{ fontSize: '1rem', color: '#6b7b8c', marginTop: 32, textAlign: 'center', background: '#f5f8fa', borderRadius: 12, padding: '14px 24px', maxWidth: 340, boxShadow: '0 2px 8px rgba(79,140,255,0.04)' }}>
          Need assistance? Click "Help" or contact support.<br />
          <span style={{ color: '#2563eb', fontWeight: 500 }}>JB-Computer Elektronik & Mehr</span>
        </div>
      </div>
    </div>
  );
}
